name: Action - Delete and Rebuild Libs w/ Cache
description: Action to set up LIBs/DLLs either full rebuilds or from cache

inputs:
  delete-first:
    description: Delete all lib/dll before starting (currently, not sure if cache overwrites)
    required: false
    type: boolean
    default: true

  cache-name:
    description: part of the cache name, the rest of the key is a hash of .gitmodules
    required: false
    default: bin-cache

runs:
  using: composite
  steps:

    - name: Remove all pre-built libs and dlls
      if: ${{ inputs.delete-first }}
      shell: cmd
      run: del /s *.lib *.dll

    - name: Setup Python (for dav1d build)
      uses: actions/setup-python@v4
      with:
        # Any version will do, safer to fix to a version
        python-version: '3.10'

    - name: Install Dependencies (CMake, pkg-configlite)
      shell: powershell
      run: |
        choco install pkgconfiglite cmake --installargs "ADD_CMAKE_TO_PATH=System" -y
        echo "C:\\Program Files (x86)\\pkgconfiglite\\bin" >> $env:GITHUB_PATH

    - name: BIN Cache - Restore LIBs/DLLs from previous GH Action
      # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
      id: cache-bin
      uses: actions/cache@v3
      with:
        # Cache key changes with every .gitmodules change, so you can run again manually
        # but as long as .gitmodules didn't change, it won't try to rebuild
        # If you want to force a rebuild, delete the cache
        #
        # Append ${{ github.sha }} if you want to rebuild every commit
        key: ${{ runner.os }}-build-${{ inputs.cache-name }}-${{ hashFiles('.gitmodules') }}
        path: |
          src/JPEGView/libwebp/lib/*.lib
          src/JPEGView/libwebp/lib64/*.lib

          src/JPEGView/libjpeg-turbo/lib/*.lib
          src/JPEGView/libjpeg-turbo/lib64/*.lib

          src/JPEGView/libpng-apng/lib/*.lib
          src/JPEGView/libpng-apng/lib64/*.lib

          src/JPEGView/lcms2/bin/*.dll
          src/JPEGView/lcms2/bin64/*.dll
          src/JPEGView/lcms2/lib/*.lib
          src/JPEGView/lcms2/lib64/*.lib

          src/JPEGView/libheif/bin/*.dll
          src/JPEGView/libheif/bin64/*.dll
          src/JPEGView/libheif/lib/*.lib
          src/JPEGView/libheif/lib64/*.lib

          src/JPEGView/libavif/bin/*.dll
          src/JPEGView/libavif/bin64/*.dll
          src/JPEGView/libavif/lib/*.lib
          src/JPEGView/libavif/lib64/*.lib

          src/JPEGView/libjxl/bin/*.dll
          src/JPEGView/libjxl/bin64/*.dll
          src/JPEGView/libjxl/lib/*.lib
          src/JPEGView/libjxl/lib64/*.lib

          src/JPEGView/libraw/bin/*.dll
          src/JPEGView/libraw/bin64/*.dll
          src/JPEGView/libraw/lib/*.lib
          src/JPEGView/libraw/lib64/*.lib

    # For speed improvements in some libs, e.g. libjpeg-turbo
    - name: Setup NASM
      uses: ilammy/setup-nasm@v1

    # Build each required library
    - name: libwebp
      if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: call extras\\scripts\\build-libwebp.bat

    - name: libjpeg-turbo
      if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: call extras\\scripts\\build-libjpegturbo.bat

    - name: libpng
      if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: call extras\\scripts\\build-libpng-apng.bat

    - name: lcms2
      if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: call extras\\scripts\\build-lcms2.bat

    - name: libheif + libavif
      if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: |
        set AVIF_CODEC_DAV1D=SYSTEM
        set AVIF_LOCAL_DAV1D=OFF
        call extras\\scripts\\build-libheif_libavif.bat

    - name: libraw
      if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: call extras\\scripts\\build-libraw.bat

    - name: libjxl
      if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
      shell: cmd
      run: call extras\\scripts\\build-libjxl.bat
